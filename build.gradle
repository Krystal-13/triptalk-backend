buildscript {
	ext {
		queryDslVersion = '5.0.0'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = "11"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 기본 설정
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// mailer
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.13'
	// json 풀어내기
	implementation group: 'org.json', name: 'json', version: '20230227'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.14.2'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.3'
	// gson 사용
	implementation 'com.google.code.gson:gson:2.9.0'
	//log
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'
    //redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	//S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	//S3 테스트용
	testImplementation 'io.findify:s3mock_2.12:0.2.4'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation 'org.apache.commons:commons-lang3:3.12.0'


	implementation 'org.springframework.data:spring-data-elasticsearch:4.4.2'
	implementation 'co.elastic.clients:elasticsearch-java:7.17.13'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
	implementation 'jakarta.json:jakarta.json-api:2.0.1'

	//swagger
	implementation "io.springfox:springfox-boot-starter:3.0.0"
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'

	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

	compileOnly 'org.projectlombok:lombok'
	// jwt 추가 라이브러리
	compileOnly 'io.jsonwebtoken:jjwt-api:0.11.5'


	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	// jwt 추가 라이브러리
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//S3 테스트용
	testImplementation 'io.findify:s3mock_2.12:0.2.4'


	// querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"


	implementation group: 'org.json', name: 'json', version: '20230227'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.14.2'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2'
    //
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}


//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝